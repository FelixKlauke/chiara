plugins {
  id 'java'
}

group = 'com.mysteryworlds'
version = '4.0.0'

repositories {
  mavenCentral()
  mavenLocal()
  maven {
    name 'Jitpack'
    description 'Jitpack'
    url 'https://jitpack.io'
  }
  maven {
    name 'Sonatype Snapshots'
    description 'Sonatype Snapshots'
    url 'https://oss.sonatype.org/content/repositories/snapshots'
  }
  maven {
    name 'Sonatype Central'
    description 'Sonatype Central'
    url 'https://oss.sonatype.org/content/repositories/central'
  }
  maven {
    name 'Spigot'
    description 'SpigotMC.org'
    url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    content {
      includeGroup 'org.bukkit'
      includeGroup 'org.spigotmc'
    }
  }
}

dependencies {
  implementation 'org.bstats:bstats-bukkit:2.2.1'
  implementation 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'
  implementation 'com.github.MilkBowl:VaultAPI:1.7'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.3'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.10.3'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
  useJUnitPlatform()
}

java {
  withSourcesJar()
  withJavadocJar()
}

jar {
  exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
  configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
}
